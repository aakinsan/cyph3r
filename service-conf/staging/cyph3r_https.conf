upstream django {
    server unix:/run/gunicorn-cyph3r.sock fail_timeout=0;
 }

server {
    listen 80 default_server;
    return 444;
    }

server {
    listen 443 ssl;
    server_name 192.168.10.129;
    root /var/www/cyph3r;
    client_max_body_size 4G;
    keepalive_timeout 5;
    ssl_certificate /etc/nginx/ssl/certificate.crt;
    ssl_certificate_key /etc/nginx/ssl/private/privatekey.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:nginx_SSL:10m;
    ssl_session_timeout 720m;
    ssl_session_tickets off;
    ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384";

    # Enable HSTS (HTTP Strict Transport Security)
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;


    # Serve static files with Cache-Control header
    location /static/ {
        alias /var/www/cyph3r/static/;  # Adjust the path to your static files directory
        add_header Cache-Control "public, max-age=86400";  # Cache static files for 24 hours
        add_header X-Content-Type-Options "nosniff";
    }


    location / {
        try_files $uri @proxy_to_django;
    }

    location @proxy_to_django {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_pass http://django;
    }
}

server {
    if ($host = 192.168.10.129) {
        return 301 https://$host$request_uri;
    }


    listen 80 deferred;
    server_name 192.168.10.129;
    return 404;
}