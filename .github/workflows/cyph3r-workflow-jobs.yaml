name: cyph3r-workflow-jobs
on:
  workflow_dispatch:

jobs:
  unit-integration-tests:
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v4

      - name: set up python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
      - name: install Dependencies, generate django secret key and create media directory to store test artifacts
        run: |
          python -m pip install -r requirements.txt
          mkdir media
          DJANGO_DEV_SECRET_KEY=$(python3 -c 'import django.utils.crypto; print(django.utils.crypto.get_random_string(50, "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()-="))')
                    echo "DJANGO_DEV_SECRET_KEY=$DJANGO_DEV_SECRET_KEY" >> $GITHUB_ENV

      - name: Run unit and integration tests
        run: pytest --cov=cyph3r --cov-report=xml --cov-report=html --cov-report=term-missing
      
  lint-bandit-secret-scan:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install Tools
        run: | 
          python -m pip install --upgrade pip
          pip install ruff black bandit

      - name: Run Black (check formatting)
        run: black --check .
        continue-on-error: true

      - name: Run Ruff (linting)
        run: ruff check .
        continue-on-error: true
      
      - name: Run Gitleaks (secret scanning)
        uses: gitleaks/gitleaks-action@v2
        with:
          config: .gitleaks.toml
          fail_on: 'all'
          report_format: 'json'
          report_path: gitleaks-report.json

      - name: Run Bandit (security analysis)
        run: bandit -c bandit.yaml -r . -f json -o bandit-report.json
        
      - name: Upload Security Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: security-reports
          path: | 
            bandit-report.json
            gitleaks-report.json
  
  semgrep:
    name: semgrep/ci
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_APP_TOKEN }}
    container:
      image: semgrep/semgrep
    if: (github.actor != 'dependabot[bot]')
    steps:
      - uses: actions/checkout@v4
      - run: semgrep ci
  
  google-cloud-artifact-registry-push:
    runs-on: ubuntu-latest
    needs: 
      - lint-bandit-secret-scan
      - unit-integration-tests
      - semgrep
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}

      - name: Push docker image to Artifact Registry
        run: |
          gcloud auth configure-docker ${{ vars.DOCKER_LOCATION }} --quiet
          docker build -t ${{ vars.DOCKER_LOCATION }}/${{ secrets.GCP_PROJECT_ID}}/${{ secrets.DOCKER_REPO }}/cyph3r:${{ github.sha }} .
          docker push ${{ vars.DOCKER_LOCATION }}/${{ secrets.GCP_PROJECT_ID}}/${{ secrets.DOCKER_REPO }}/cyph3r:${{ github.sha }}